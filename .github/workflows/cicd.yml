name: CI/CD
on:
    push:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: scottmckendry/ccinvoice

    # test environment variables
    SMTP_HOST: ${{ secrets.SMTP_HOST }}
    SMTP_PORT: ${{ secrets.SMTP_PORT }}
    SMTP_USER: ${{ secrets.SMTP_USER }}
    SMTP_PASS: ${{ secrets.SMTP_PASS }}
    FROM_NAME: Harry Potter
    FROM_ADDRESS: 4 Privet Drive
    FROM_CITY: Little Whinging, Surrey
    ACCOUNT_NUMBER: 1234567890-1234
    BASE_URL: https://duckduckgo.com/?q=

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: 1.23
            - name: Test
              run: go mod tidy && go run gotest.tools/gotestsum@latest --junitfile unit-tests.xml --format pkgname

            - name: Test summary
              uses: test-summary/action@v2
              with:
                  paths: unit-tests.xml
              if: always()

    release-please:
        name: Release
        runs-on: ubuntu-latest
        needs: [test]
        if: github.ref == 'refs/heads/main'
        outputs:
            release_created: ${{ steps.release-please.outputs.release_created }}
            tag_name: ${{ steps.release-please.outputs.tag_name }}
        steps:
            - uses: googleapis/release-please-action@v4
              id: release-please
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

    build-image:
        name: Publish
        needs: [release-please]
        if: needs.release-please.outputs.release_created == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            # Install the cosign tool except on PR
            # https://github.com/sigstore/cosign-installer
            - name: Install cosign
              uses: sigstore/cosign-installer@v3.3.0
              with:
                  cosign-release: "v2.2.2"

            # Set up BuildKit Docker container builder to be able to build
            # multi-platform images and export cache
            # https://github.com/docker/setup-buildx-action
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Login against a Docker registry except on PR
            # https://github.com/docker/login-action
            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # Extract metadata (tags, labels) for Docker
            # https://github.com/docker/metadata-action
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=latest
                      type=raw,value=${{ needs.release-please.outputs.tag_name }}

            # Build and push Docker image with Buildx (don't push on PR)
            # https://github.com/docker/build-push-action
            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
